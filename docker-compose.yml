version: '3.7'

services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: convenience_store
    container_name: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project-crud
    environment:
      PORT: ${PORT}
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - backend
    develop:
      watch:
        - action: sync  
          path: ./src  
          target: /app/src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json    

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    container_name: nest-pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin4
    ports:
      - '5050:80'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

networks:
  backend:
    driver: bridge